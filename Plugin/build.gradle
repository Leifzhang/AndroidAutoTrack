// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.5.30'
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/central/'
        }
        google()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$apgVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.17.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
      /*  maven {
            name = "GitHubPackages"
            url "https://github.com/Leifzhang/AndroidAutoTrack"
            credentials {
                username = 'leifzhang'
                password = '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'
            }
        }*/
        maven {
            url 'https://maven.aliyun.com/repository/central/'
        }
        google()
    }

    configurations.all { Configuration c ->
        c.resolutionStrategy {
            dependencySubstitution {
                all { DependencySubstitution dependency ->
                    if (dependency.requested instanceof ModuleComponentSelector) {
                        def p = rootProject.allprojects.find { p -> p.group == dependency.requested.group && p.name == dependency.requested.module }
                        if (p != null) {
                            dependency.useTarget(project(p.path), 'selected local project')
                        }
                    }
                }
            }
        }
    }

    pluginManager.withPlugin("java-library") {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    group("com.github.leifzhang")
    version = property("plugin.version")
    afterEvaluate {
        if (project.plugins.hasPlugin('com.android.library') || project.plugins.hasPlugin('com.android.application')) {
            def android = project.extensions.getByName('android')
            android.compileOptions {
                sourceCompatibility JavaVersion.VERSION_11
                targetCompatibility JavaVersion.VERSION_11
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}